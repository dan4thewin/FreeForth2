\ xt[4],ct[1],sz[1],nm[sz],nul
: .hdr		dup @ . 4+ dup c@ . 1+ c@+ 2dup type + 1+ ;
: .hdrs		H@ START .hdr cr ENTER dup 5+ c@ 0- 0= drop UNTIL drop ;

variable ~xt
: 3dup		>r 2dup r -rot r> ;
: sz=		under 5 over+ c@ rot - ;
: nm=		3dup 6+ swap $- ;
: nexth		5+ c@+ + 1+ ;
: stop?		dup 5+ c@ 0- 0= drop IF !"not found" THEN ;
: xtsave	4 over+ c@ 1- 0<> drop IF dup@ ~xt! THEN ;
: noconst	dup 4+ c@ 1- 0= drop IF !"matched a constant or variable" THEN ;
: findxt	here ~xt! H@ START sz= 0= drop IF nm= 0= drop IF BREAK THEN
		xtsave nexth ENTER stop? REPEAT noconst nip nip @ ~xt@ over- ;

variable ustr 8 allot \ 4+8
: 0uc!		0 ustr! ;
: uac		ustr appendc ;
: uac!^		uac ' putc !^ ;
: uac^^		putc ^^ ;
: u2str		0uc! .dec\ ustr c@+ ;

variable buf 76 allot \ 4+76
: ba		buf append ;
: gdbscript	over+ swap
		uac!^
		  0 buf!
		  "attach_" ba getpid u2str ba "^J" ba
		  "set disassembly-flavor intel^J" ba
		  "disass/r_" ba u2str ba "," ba u2str ba "^J" ba
		uac^^ ;
: gdbrun	"gdb --batch -x .see | less -F -+c" shell ;
: tmpfile	".see" ;
: tmpsave	openw0 dup >r ?ior r write ?ior r close ?ior rdrop ;
: gdbdump	gdbscript buf c@+ tmpfile tmpsave gdbrun ;
: see`		wsparse findxt gdbdump ;
