\ shim aimed at passing most of the Forth 2012 Core word set tests
" compat" features append

\ swap find for one that ignores case and won't return a word being defined
:. sz-		2dup h.sz+ c@ - drop ;
:. nm-		3dup h.nm+ swap $-. drop ;
:. hdr-		sz- nm- 0= ? ;
:. more?	dup h.sz+ c@ 0- drop ;
:. nexth	h.sz+ c@+ + 1+ ;
:. tos>si`	$de89, s08 ;	\ 89DE(mov esi,ebx)
:. findic	H@ anon@ 0- drop 0= IF nexth THEN BEGIN
		more? 0<> WHILE
		hdr- 0= IF tos>si dup which! @ swap 0_ rot BREAK
		nexth REPEAT drop 0- ;
findic ' find !^

\ use base for number input as well as number output
:. _number	base@ number. ;
_number		' number !^
: hex		$10 base! ;
: decimal	$A base! ;

%`		' alias mod` ;
~`		' alias invert` ;
^`		' alias xor` ;
|`		' alias or` ;
&`		' alias and` ;
<<`		' alias lshift` ;
>>`		' alias rshift` ;
r`		' alias r@` ;
/%`		' alias /mod` ;
m/mod`		' alias sm/rem` ;
4+`		' alias cell+` ;
4*`		' alias cells` ;
1+`		' alias char+` ; : chars ;
lit`		' alias literal` ;
c@+`		' alias count` ;
eval		' alias evaluate ;
.u		' alias u. ;

: tos>di`	$DF89, s08 ;
: di>tos`	dup` $FB89, ,1 s1 ;
: fm/mod	tos>di m/mod over 0; 0<. di>tos 0<. ^ 0;
		drop 1- swap di>tos + swap ;

: spaces	TIMES space REPEAT ;
: word		parse swap 1- swap overc! ;
: char`		wsparse drop c@ lit` ;
char`		' alias [char]` ;
$20 constant bl

: recurse`	H@ @ call, ;
: immediate	H@ dup 1- tuck over h.sz+ c@ h.nm+ move dup H!
		h.sz+ dup c@ 1+ tuck overc! + '`' swap c! ;

r`		' alias i` ;
r2`		' alias j` ;
2r>`		' alias unloop`
exit		' alias osexit ;
jmp`		' alias exit` ;
: do`		2>r` BEGIN` ;
: loop`		2r>` 1+` >` WHILE` 2>r` REPEAT` 2drop` ;
: +loop`	r>` +` r>` swap` <=` WHILE` 2>r` REPEAT` 2drop` ;
: leave`	unloop` exit` ;

:. acc		swap base@ um* drop rot base@ um* d+ ;
: toupper	dup 'a' >=. 0; drop dup 'z' <=. 0; drop -$21& ;
: digit?	toupper $30- 9 u> drop IF 7- $a u< drop IF zFALSE ;THEN THEN
		base@ u>= drop IF zFALSE ;THEN nzTRUE ;
: >number	2dup+ >r TIMES dupc@ digit? 0= IF drop BREAK swap >r acc r> 1+
		REPEAT r> over- ;

:. findok	find 0; !"not_found" ;
:. xt_h		findok which@ ;
: _hdrswap	xt_h 2swap xt_h 2xchg ! ! ;
: hdrswap`	;` wsparse wsparse _hdrswap ;

hdrswap 0=`	0=.`
hdrswap =`	=.`
hdrswap 0<>`	0<>.`
hdrswap <>`	<>.`
hdrswap 0<`	0<.`
hdrswap <`	<.`
hdrswap 0>=`	0>=.`
hdrswap >=`	>=.`
hdrswap 0<=`	0<=.`
hdrswap <=`	<=.`
hdrswap 0>`	0>.`
hdrswap >`	>.`
hdrswap C1?`	C1?.`
hdrswap C0?`	C0?.`
hdrswap u<`	u<.`
hdrswap u>=`	u>=.`
hdrswap u<=`	u<=.`
hdrswap u>`	u>.`
hdrswap IF`	IF.`
hdrswap WHILE`	WHILE.`
hdrswap TILL`	TILL.`
hdrswap UNTIL`	UNTIL.`

\ standard wants align to be non-immediate
\ rename align` to align' - provide both macro and non-macro aliases
"align`" xt_h 11+ $27 swap c! dup alias align,` alias align ;
: aligned dup 3& 0; - 4+ ;

: '.`	wsparse findok lit` ;
'.`	' alias [']` ;
hdrswap '`	'.`

hidepvt ;
