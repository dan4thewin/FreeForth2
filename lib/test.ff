\ mashup of test harness from John Hayes and TAP (test anything protocol)
\ t{ 1 dup 1+ -> 1 2 }t
" test" features append

pvtmargin
variable plan
variable okcnt
variable skipcnt
variable verbose
variable index pvt

:. green.	dim green foreground ;
:. red.		red foreground ;
:. cyan.	cyan foreground ;
:. yellow.	yellow foreground ;
:. n.		normal ;

: >plan		dup plan! cyan. ."1.." .dec n. cr ;
:. _tally	plan@ okcnt@ skipcnt@ + - 0= drop IF cyan. ."PASSED" 0
		ELSE red. ."FAILED" 1 THEN n. cr ;
: tally		_tally drop ;
: tally-exit	_tally exit ;

variable savedepth pvt
:. newtest	index@ ++ 0 savedepth! depth 0; !"stack must be empty" ;
: t{`		;` verbose@ IF. 2 >in -! lnparse tuck type space >in -! THEN newtest ;
: ->`		;` depth savedepth! ;
:. chkdepth	depth savedepth@ 2* - 0; yellow. ."wrong number of results^J" n. ;
:. chkvals	savedepth@ >>rr BEGIN depth 0; dropr> <> 2drop IF depth +r BREAK REPEAT
		yellow. ."incorrect result^J" n. ;
:. chk		chkdepth chkvals 0= ? ;
:. ok?		chk 0= IF okcnt@ ++ green. ."ok " ELSE red. ."not ok " dd THEN
		index@ .dec n. cr ;
: }t`		;` ok? ;
: skip`		skipcnt@ ++ \` ;

: testing`	;` 8 >in -! lnparse cyan. type n. cr ;
hidepvt ;
